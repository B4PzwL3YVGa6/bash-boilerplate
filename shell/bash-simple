#!/usr/bin/env bash
#       _                 _
#   ___(_)_ __ ___  _ __ | | ___
#  / __| | '_ ` _ \| '_ \| |/ _ \
#  \__ \ | | | | | | |_) | |  __/
#  |___/_|_| |_| |_| .__/|_|\___|
#                  |_|
#
# A template for creating a simple bash script.
#
# Usage:
#   bash-simple argument
#
# Depends on:
#  list
#  of
#  programs
#  expected
#  in
#  environment
#
# Copyright (c) 2015 William Melody • hi@williammelody.com

###############################################################################
# Strict Mode
###############################################################################

set -o nounset
set -o errexit
set -o pipefail
IFS="$(printf '\n\t')"

###############################################################################
# Environment
###############################################################################

# $_me
#
# Set to the program's basename.
_me=$(basename "$0")

###############################################################################
# Help
###############################################################################

# Set $_program_help
#
# The `read` form of assignment is used for a balance of ease of
# implementation and simplicity. There is an alternative assignment form
# that could be used here:
#
# var="$(cat <<'EOM'
# some message
# EOM
# )
#
# However, this form appears to require trailing space after backslases to
# preserve newlines, which is unexpected. Using `read` simply requires
# escaping backslashes, which is more common.
#
# The `|| true` after the first `'EOM'` is used to circumvent the null byte
# expectation that `set -o errexit` (aka, `set -e`) has for heredocs, making
# the pipe exit with a 1 status rather than 0. Another possible approach
# is to temporarily disable `set -e` by calling `set +e`, running the read,
# then calling `set -e` again.
read -d '' "_program_help" <<EOM || true
      _                 _
  ___(_)_ __ ___  _ __ | | ___
 / __| | '_ \` _ \\\| '_ \\\| |/ _ \\\\
 \\\__ \\\ | | | | | | |_) | |  __/
 |___/_|_| |_| |_| .__/|_|\\\___|
                 |_|

A template for creating a simple bash script.

Usage:
  $_me argument
EOM

###############################################################################
# Program Functions
###############################################################################

_simple() {
  printf "Perform a simple operation."
}

###############################################################################
# Main
###############################################################################

if [[ -z "$1" || "$1" = "-h" ]]; then
  printf "%s\n" "$_program_help"
  exit 0
fi

_simple "$@"

